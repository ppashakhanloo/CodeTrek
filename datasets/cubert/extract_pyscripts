#!/usr/bin/env python3

import os
from tqdm import tqdm
import json
import shutil

if not os.path.isdir("py_files/train/correct"):
    os.makedirs("py_files/train/correct")
if not os.path.isdir("py_files/eval/correct"):
    os.makedirs("py_files/eval/correct")
if not os.path.isdir("py_files/dev/correct"):
    os.makedirs("py_files/dev/correct")
if not os.path.isdir("py_files/train/misuse"):
    os.makedirs("py_files/train/misuse")
if not os.path.isdir("py_files/eval/misuse"):
    os.makedirs("py_files/eval/misuse")
if not os.path.isdir("py_files/dev/misuse"):
    os.makedirs("py_files/dev/misuse")

numtrain = 0
numeval = 0
numdev = 0

def process_json_collection(filename: str, index: int, kind: str):
    with open(filename, 'r') as json_collection:
        json_data = json_collection.readlines()
        for json_str in tqdm(json_data):
            datadict = json.loads(json_str)
            # print(datadict)
            if datadict["label"] == "Correct":
                label = "correct"
            else:
                label = "misuse"
            savepath = "py_files/" + kind + "/" + label + "/file_" + str(index)
            if os.path.isdir(savepath):
                shutil.rmtree(savepath)
            os.makedirs(savepath)
            with open(savepath + "/source.py", "w") as srcfile:
                srcfile.write(datadict["function"])
            index += 1
    return index

bench = []
with open('benchmark_gen_list', 'r') as blist:
    bench = [x.strip() for x in blist.readlines()]

for filename in bench:
    if filename.startswith("dev"):
        print("Processing " + filename)
        numdev = process_json_collection(filename, numdev, "dev")
        print("Number of dev programs processed till now:", numdev)
    if filename.startswith("train"):
        print("Processing " + filename)
        numtrain = process_json_collection(filename, numtrain, "train")
        print("Number of train programs processed till now:", numtrain)
    if filename.startswith("eval"):
        print("Processing " + filename)
        numeval = process_json_collection(filename, numeval, "eval")
        print("Number of eval programs processed till now:", numeval)
