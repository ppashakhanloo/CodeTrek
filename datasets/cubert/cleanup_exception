#!/usr/bin/env python3

import os
from tqdm import tqdm
import json
import shutil

if not os.path.isdir("py_files/train"):
  os.makedirs("py_files/train")
if not os.path.isdir("py_files/eval"):
  os.makedirs("py_files/eval")
if not os.path.isdir("py_files/dev"):
  os.makedirs("py_files/dev")

numtrain = 0
numeval = 0
numdev = 0

def process_json_collection(filename: str, index: int, kind: str):
  with open(filename, 'r') as json_collection:
    json_data = json_collection.readlines()
    for json_str in tqdm(json_data):
      datadict = json.loads(json_str)
    
      function = datadict["function"]
      label = datadict["label"]
      function = function.replace("__HOLE__", "HoleException")
      function = "HoleException=BaseException\n" + function

      savepath = "py_files/" + kind + "/file_" + str(index)
      if os.path.isdir(savepath):
        shutil.rmtree(savepath)
      os.makedirs(savepath)
      with open(savepath + "/source.py", "w") as srcfile:
        srcfile.write(function)
      with open(savepath + "/exception_info.txt", "w") as efile:
        efile.write(label)
      index += 1
  return index
        

for filename in os.listdir("."):
  if filename.startswith("dev"):
    print("Processing " + filename)
    numdev = process_json_collection(filename, numdev, "dev")
    print("Number of dev programs processed till now:", numdev)
  if filename.startswith("train"):
    print("Processing " + filename)
    numtrain = process_json_collection(filename, numtrain, "train")
    print("Number of train programs processed till now:", numtrain)
  if filename.startswith("eval"):
    print("Processing " + filename)
    numeval = process_json_collection(filename, numeval, "eval")
    print("Number of eval programs processed till now:", numeval)
